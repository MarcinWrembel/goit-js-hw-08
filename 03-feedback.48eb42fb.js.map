{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,sBAEpCC,QAAQC,IAAIJ,GA8BZA,EAAKK,iBAAiB,UAVrB,SAAuBC,GACpBA,EAAMC,iBACN,MACIC,UAAUC,MAACA,EAAKC,QAAEA,IACdJ,EAAMK,cACdR,QAAQC,IAAIK,EAAMG,MAAOF,EAAQE,OAEjCN,EAAMK,cAAcE,O","sources":["src/js/03-feedback.js"],"sourcesContent":["import throttle from 'lodash/throttle';\n\nconst form = document.querySelector('form.feedback-form');\nconst KEY_LOCAL_STORAGE = \"feedback-form-state\";\nconsole.log(form);\n\n// const setLocalStorage = (key, value) => {\n//     try {\n//       const valueToSave = JSON.stringify(value);\n//       localStorage.setItem(key, valueToSave);\n//     } catch (error) {\n//       console.error('Set state error:', error.message);\n//     }\n//   };\n  \n//   const getLocalStorage = key => {\n//     try {\n//       const valueSaved = localStorage.getItem(key);\n//       return valueSaved === null ? undefined : JSON.parse(valueSaved);\n//     } catch (error) {\n//       console.error('Get state error', error.message);\n//     }\n//   };\n  \n function valueHandler (event){\n    event.preventDefault();\n    const {\n        elements: {email, message}\n        } = event.currentTarget;\n    console.log(email.value, message.value)\n    \n    event.currentTarget.reset()\n }\n\nform.addEventListener('submit', valueHandler)\n\n/*\nW HTML znajduje się znacznik formularza. Napisz skrypt, który będzie zapisywał wartości pól w local storage, gdy użytkownik coś wpisuje.\n\n<form class=\"feedback-form\" autocomplete=\"off\">\n  <label>\n    Email\n    <input type=\"email\" name=\"email\" autofocus />\n  </label>\n  <label>\n    Message\n    <textarea name=\"message\" rows=\"8\"></textarea>\n  </label>\n  <button type=\"submit\">Submit</button>\n</form>\n\nWykonuj to zadanie w plikach 03-feedback.html i 03-feedback.js. Rozbij je na kilka podzadań:\n\nŚledź w formularzu zdarzenie input, i za każdym razem zapisuj w local storage obiekt z polami email i message, w których przechowuj aktualne wartości pól formularza. Niech kluczem do storage będzie \"feedback-form-state\".\nPodczas przeładowywania strony sprawdzaj stan storage i jeśli są tam zapisane dane, wypełniaj nimi pola formularza. W przeciwnym wypadku pola powinny być puste.\nPo wysłaniu formularza wyczyść storage i pola formularza, a także wprowadź obiekt z polami email, message i ich aktualnymi wartościami do wiersza poleceń.\nZrób tak, aby storage aktualizował się nie częściej niż raz na 500 milisekund. Aby to zrobić, użyj biblioteki lodash.throttle i dodaj ją do projektu\n*/"],"names":["parcelRequire","$945622fd0f572e60$var$form","document","querySelector","console","log","addEventListener","event","preventDefault","elements","email","message","currentTarget","value","reset"],"version":3,"file":"03-feedback.48eb42fb.js.map"}