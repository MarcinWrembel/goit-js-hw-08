{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MACMC,EAAOC,SAASC,cAAc,sBAC9BC,EAAoBF,SAASC,cAAc,uBAC3CE,EAAsBH,SAASC,cAAc,4BACnD,IAAIG,EACAC,EAWJ,SAASC,EAAgBC,GACvB,IACE,MAAMC,EAAaC,aAAaC,QAAQH,GACxC,OAAsB,OAAfC,OAAsBG,EAAYC,KAAKC,MAAML,E,CACpD,MAAOM,GACPC,QAAQD,MAAM,kBAAmBA,EAAME,Q,OAGAL,IAAvCL,EAxBsB,yBAyBxBF,EAAeE,EAzBS,uBAyB0BW,MAClDZ,EAAiBC,EA1BO,uBA0B4BU,QAE9CZ,IACJF,EAAkBgB,MAAQd,GAEtBC,IACJF,EAAoBe,MAAQb,IA2BhCN,EAAKoB,iBAAiB,QAASC,EAAAvB,EAAA,EAxB/B,WAEE,MAAMwB,EAAa,CACjBJ,MAAOf,EAAkBgB,MACzBF,QAASb,EAAoBe,QAhCjC,SAAyBA,GACvB,IACE,MAAMI,EAAcV,KAAKW,UAAUL,GACnCT,aAAae,QAVS,sBAUkBF,E,CACxC,MAAOR,GACPC,QAAQD,MAAM,mBAAoBA,EAAME,Q,EA8B1CS,CAAgBJ,GAChBjB,EAAeiB,EAAWJ,MAC1BZ,EAAiBgB,EAAWL,O,GAewB,MACtDjB,EAAKoB,iBAAiB,UAbtB,SAAoBO,GAClBA,EAAMC,iBACND,EAAME,cAAcC,QAEpBd,QAAQe,IACN,iBAAiB1B,2BAAoCC,gBAA+BI,aAAEC,QApDhE,2BAwDxBD,aAAasB,O","sources":["src/js/03-feedback.js"],"sourcesContent":["import throttle from 'lodash/throttle';\n\nconst KEY_LOCAL_STORAGE = 'feedback-form-state';\nconst form = document.querySelector('form.feedback-form');\nconst EmailInputDefault = document.querySelector('input[type=\"email\"]');\nconst MessageInputDeafult = document.querySelector('textarea[name=\"message\"]');\nlet emailStorage;\nlet messageStorage;\n\nfunction setLocalStorage(value) {\n  try {\n    const valueToSave = JSON.stringify(value);\n    localStorage.setItem(KEY_LOCAL_STORAGE, valueToSave);\n  } catch (error) {\n    console.error('Set state error:', error.message);\n  }\n}\n\nfunction getLocalStorage(key) {\n  try {\n    const valueSaved = localStorage.getItem(key);\n    return valueSaved === null ? undefined : JSON.parse(valueSaved);\n  } catch (error) {\n    console.error('Get state error', error.message);\n  }\n}\nif (getLocalStorage(KEY_LOCAL_STORAGE) !== undefined) {\n  emailStorage = getLocalStorage(KEY_LOCAL_STORAGE).email;\n  messageStorage = getLocalStorage(KEY_LOCAL_STORAGE).message;\n\n  if (!!emailStorage) {\n    EmailInputDefault.value = emailStorage;\n  }\n  if (!!messageStorage) {\n    MessageInputDeafult.value = messageStorage;\n  }\n}\nfunction valueHandler() {\n\n  const dataToSave = {\n    email: EmailInputDefault.value,\n    message: MessageInputDeafult.value,\n  };\n\n  setLocalStorage(dataToSave);\n  emailStorage = dataToSave.email;\n  messageStorage = dataToSave.message;\n}\n\nfunction formSubmit(event) {\n  event.preventDefault();\n  event.currentTarget.reset();\n  //localStorage.removeItem(KEY_LOCAL_STORAGE);\n  console.log(\n    `to jest mail: ${emailStorage}, \\nto jest wiadomość: ${messageStorage}, \\nobiekt: ${localStorage.getItem(\n      KEY_LOCAL_STORAGE\n    )} `\n  );\n  localStorage.clear();\n}\n\nform.addEventListener('input', throttle(valueHandler, 500));\nform.addEventListener('submit', formSubmit);\n\n/*\nW HTML znajduje się znacznik formularza. Napisz skrypt, który będzie zapisywał wartości pól w local storage, gdy użytkownik coś wpisuje.\n\n<form class=\"feedback-form\" autocomplete=\"off\">\n  <label>\n    Email\n    <input type=\"email\" name=\"email\" autofocus />\n  </label>\n  <label>\n    Message\n    <textarea name=\"message\" rows=\"8\"></textarea>\n  </label>\n  <button type=\"submit\">Submit</button>\n</form>\n\nWykonuj to zadanie w plikach 03-feedback.html i 03-feedback.js. Rozbij je na kilka podzadań:\n\nŚledź w formularzu zdarzenie input, i za każdym razem zapisuj w local storage obiekt z polami email i message, w których przechowuj aktualne wartości pól formularza. Niech kluczem do storage będzie \"feedback-form-state\".\nPodczas przeładowywania strony sprawdzaj stan storage i jeśli są tam zapisane dane, wypełniaj nimi pola formularza. W przeciwnym wypadku pola powinny być puste.\nPo wysłaniu formularza wyczyść storage i pola formularza, a także wprowadź obiekt z polami email, message i ich aktualnymi wartościami do wiersza poleceń.\nZrób tak, aby storage aktualizował się nie częściej niż raz na 500 milisekund. Aby to zrobić, użyj biblioteki lodash.throttle i dodaj ją do projektu\n*/\n"],"names":["$8zd4h","parcelRequire","$945622fd0f572e60$var$form","document","querySelector","$945622fd0f572e60$var$EmailInputDefault","$945622fd0f572e60$var$MessageInputDeafult","$945622fd0f572e60$var$emailStorage","$945622fd0f572e60$var$messageStorage","$945622fd0f572e60$var$getLocalStorage","key","valueSaved","localStorage","getItem","undefined","JSON","parse","error","console","message","email","value","addEventListener","$parcel$interopDefault","dataToSave","valueToSave","stringify","setItem","$945622fd0f572e60$var$setLocalStorage","event","preventDefault","currentTarget","reset","log","clear"],"version":3,"file":"03-feedback.48f7810e.js.map"}